import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

# Load the historical energy usage data
data = pd.read_csv('energy_usage_data.csv')

# Preprocess the data
X = data.drop(['energy_usage'], axis=1)
y = data['energy_usage']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
one_hot_encoder = OneHotEncoder()
X_encoded = one_hot_encoder.fit_transform(X_scaled)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)

# Train a Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model's performance
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
print(f"Mean Absolute Error: {mae}")

# Use the trained model to predict energy usage and recommend energy-saving actions
new_data = pd.
